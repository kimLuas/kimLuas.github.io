package view;

import java.util.ArrayList;
import java.util.Scanner;

import model.book.BookVO;
import model.movie.MovieVO;

public class View {
	public int ticket; // 티켓넘버 (primary key)
	public String uName; // 예약자 이름
	public String uPhone; // 예약자 폰넘버
	public int mNum; // 영화넘버 (primary & foreign key)
	public String mName; // 영화 이름
	public String mDay; // 상영일
	public String mTime; // 상영 시작 시간
	public String mGenre; // 영화장르 varchar(20)
	public String mRuntime; // 러닝타임 varchar(20)
	public String mCast; // 영화감독 varchar(50),not null
	public String mInfo; // 영화정보(줄거리) varchar(500)
	public int password; // 관리자 비밀번호 입력받을 변수
	public boolean flag = false; // 참 거짓을 판단할 flag변수 VO에 넣어줄꺼
	public Scanner sc = new Scanner(System.in);

	public int button;
	public int daybutton;
	public int timebutton;
	public BookVO bvo = new BookVO();
	public MovieVO mvo = new MovieVO();

	// 프로그램 start
	public void start() {
		System.out.println("\t■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■");
		System.out.println("\t■■■■■■■■■■■■■■■■■■■■[HAH영화관]■■■■■■■■■■■■■■■■■■■■");
		System.out.println("\t■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■");
		System.out.println("\n \t\t\t어서오세요(>UvU<)\n");
	}

	// 프로그램 menu
	public void viewMain() {
		sc = new Scanner(System.in);
		try {
			System.out.printf("%20s %15s %15s", "[1]사용자모드", "[2]관리자모드", "[3]프로그램종료\n");
			System.out.print("Go ▶ ");
			button = sc.nextInt(); // button --> 메뉴 선택 버튼 변수
			System.out.println();}
		catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 사용자모드 매뉴 출력
	public void userView() {
		try {
			System.out.println("	---------------------------------------------------");
			System.out.printf("	     사용자모드에 입장하셨습니다. 원하시는 버튼을 선택해주세요:D\n");
			System.out.println("	---------------------------------------------------");
			System.out.println();
			System.out.printf("%15s %15s %15s  %15s\n", "[1]예매", "[2]예매확인", "[3]영화검색", "[4]사용자모드 종료\n");
			System.out.print("Go ▶ ");
			button = sc.nextInt();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 현재 상영중인 영화리스트
	public void showList(ArrayList<MovieVO> datas) {
		System.out.println("-----------------[Movie List]-----------------");
		if (datas.size() == 0) {
			return;
		} else {
			for (MovieVO v : datas) {
				System.out.println("[" + v.getmNum() + "] " + v.getmName());
			}
		}
		System.out.println("---------------------------------------------");
	}

	// 영화검색창에서 영화고유번호 입력시 출력해야하는 영화정보 리스트
	public void showList_searchNum(ArrayList<MovieVO> datas) {
		if (datas.size() == 0) {
			System.out.println("검색한 번호의 영화가 존재하지 않습니다 T0T");
			System.out.println();
			return;
		} else {
			for (MovieVO v : datas) {
				System.out.println("[" + v.getmNum() + "] " + v.getmName() + " / " + v.getmGenre() + " / "
						+ v.getmRuntime() + " / " + v.getmCast() + " / " + v.getmInfo());
			}
		}
	}

	// 사용자모드 1 - 영화예매 , 예약자성명, 휴대폰번호 입력
	public void userView1() {
		try {
			System.out.println();
			System.out.println("예매할 영화 번호 선택 ▶ ");
			int mNum = sc.nextInt();
			// 컨트롤러에서 DB에 몇개의 영화가 있는지 확인해서 검사 필요
			if (mNum <= 0) {
				System.out.println("xxxxxx[없는 영화번호]xxxxxx");
				System.out.println();
				return;
			} else {
				bvo.setmNum(mNum);
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 예약자 정보를 입력받아 예약을 한다.
	public void userView1by2() {
		try {
			System.out.println("예약자 성명 ▶ ");
			String uName = sc.next();
			bvo.setuName(uName);

			System.out.println("예약자 휴대폰 뒷번호(4자리) ▶ ");
			String uPhone = sc.next();
			if (uPhone.length() == 4) {
				bvo.setuPhone(uPhone);
			}else {
				System.out.println("잘못된 입력입니다 :(");
				return;
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 사용자모드 1 - 영화예매 상영일 선택
	public void userViewMday() {
		try {	
			System.out.println("----------------[상영일]----------------");
			System.out.printf("%s %20s %20s\n", " ① 8월9일 ", "② 8월 10일", "③ 8월 11일");
			System.out.println("--------------------------------------");
			System.out.println("상영일 선택 ▶ ");
			button = sc.nextInt();
			if (button >= 1 && button <= 3) {
				return;
			} else {
				System.out.println("선택하신 <상영일>은 없는번호(。・ω・。)");
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 사용자모드 1 - 영화예매 상영시간 선택
	public void userViewMtime() {
		try {
			System.out.println("----------------[상영시간]----------------");
			System.out.printf("%s %15s %15s\n", "① 12:00", "② 14:00", "③ 16:00");
			System.out.println("--------------------------------------");
			System.out.println("상영시간 선택 ▶ ");
			button = sc.nextInt();
			if (button >= 1 && button <= 3) {
			} else {
				System.out.println("선택하신 <상영시간>은 없는번호(。・ω・。)");
				System.out.println();
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public void ticketComplete() {
		System.out.println("★☆★☆[예매 Complete]☆★☆★ \n");
	}

	// 사용자모드 1 - 예매완료시 완료된 티켓번호 출력
	public void bookingSuccessInfo(BookVO bvo) {
		System.out.println("┌─────────────[티겟발급]───────────┐");
		System.out.println("\t\t" + bvo.getuName() + "님\n\t예매번호: " + bvo.getuPhone() + " - " + bvo.getTicket());
		System.out.println("└────────────────────────────────┘");
	}

	// 예매 END ==========================================================================================

	// 예매확인 START =======================================================================================
	// 사용자모드 2 - 예매확인 예약한 전화번호 확인
	public void userView2(BookVO bvo) {
		try {
			System.out.println("\t■■■■■■■■■■■■■■■■■■[예매내역확인]■■■■■■■■■■■■■■■■■■");
			System.out.println();
			while (true) {
				System.out.println("예약한 전화번호 4자리 ▶ ");
				String uPhone = sc.next();

				if (uPhone.length() == 4) { // 제대로된 입력이면 break;
					this.bvo.setuPhone(uPhone);
					break;
				} else {
					System.out.println("잘못된 입력 Again! ::>_<::");
					System.out.println();
					continue;
				}
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 사용자모드 2 - 예매확인 티켓번호 확인
	public void checkTicket() {
		try {
			System.out.println("티켓번호  ▶ ");
			int ticket = sc.nextInt();
			if (ticket > 0) { // 제대로된 입력이면 break;
				bvo.setTicket(ticket);
			} else {
				System.out.println("잘못된 입력!ಥ_ಥ");
				System.out.println();
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 사용자모드 2 - 예매완료시 완료된 티켓번호 출력
	public void bookingCheck(BookVO bvo) {
		System.out.println("┌─────────────[예매내역]───────────┐");
		System.out.println("\t" + bvo.getuName() + "님  \n\t예매번호 : " + bvo.getuPhone() + "-" + bvo.getTicket() + "\n\t"
				+ bvo.getmName() + " " + bvo.getmDay() + " " + bvo.getmTime());
		System.out.println("└────────────────────────────────┘");
	}

	// 사용자모드 2 의 추가메뉴 선택 / 취소 종료
	public void userView2by() {
		try {
			System.out.println();
			System.out.printf("%20s %15s\n", "[1]예매취소", "[2]종료");
			System.out.print("Go ▶ ");
			button = sc.nextInt();
			System.out.println();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 사용자모드 2 의 추가메뉴 선택 / 취소
	public void userView2by1() {
		try {
			System.out.println();
			System.out.println("\t■■■■■■■■■■■■■■■■■■■[예매취소]■■■■■■■■■■■■■■■■■■■");
			System.out.println();
			System.out.println("취소할 티켓번호 ▶ ");
			ticket = sc.nextInt();
			bvo.setTicket(ticket);
			System.out.println("★☆★☆[예매 취소 Complete]☆★☆★");
			System.out.println();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 사용자모드 2 의 추가메뉴 선택 / 종료
	public void userView2by2() { // 사용자모드 [2]예매확인-[2]예매종료
		if (button == 2) {
			System.out.println("[System]예매확인을 종료합니다.");
			System.out.println();
		}
	}

	// 사용자모드 3 영화정보검색 메뉴출력
	public void userView3() {
		try {
			System.out.println();
			System.out.println("\t■■■■■■■■■■■■■■■■■■■[영화검색]■■■■■■■■■■■■■■■■■■■");
			System.out.println();
			System.out.printf("%20s %15s %15s\n", "① 영화번호로 검색", "② 장르검색", "③ 검색종료");
			System.out.println("GO ▶");
			button = sc.nextInt();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 사용자모드 3 영화정보검색/ 영화번호로 검색
	public void userView3by1() {
		try {
			if (button == 1) {
				System.out.println("검색할 영화번호 ▶ ");
				int mNum = sc.nextInt();
				mvo.setmNum(mNum);
			}
		}catch(Exception e){
			e.printStackTrace();	
		}
	}

	// 영화리스트가 존재하지 않을때 출력할 멘트
	public void showListEmpty() {
		System.out.println("검색하신 영화 정보가 존재하지 않습니다 T0T");
		System.out.println();

	}

	// 사용자모드 3 영화정보검색 / 장르검색
	public void userView3by2() {
		try {
			if (button == 2) {
				System.out.println("검색할 장르  ▶");
				String mGenre = sc.next();
				mvo.setmGenre(mGenre);
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 사용자모드 3 영화정보검색 / 종료
	public void userView3by3() {
		if (button == 3) {
			System.out.println();
			System.out.println("[System]영화 검색을 종료합니다.");
			System.out.println();

		}
	}

	// 사용자모드 종료 버튼
	public void userView4() { // [4]사용자모드 종료
		System.out.println();
		System.out.println("[System] 사용자 모드를 종료합니다 :D");
		System.out.println();
		// break;
	}

	// 유효성 검사
	public void wrongcheck() {
		System.out.println("잘못된 입력 :(");
		System.out.println();
	}
	public void wrongback() {
		System.out.println("해당 정보와 일치하는 예매자가 없습니다 :(");
		System.out.println();
	}

	// 관리자모드 START================================================================================	
	// 관리자모드 비밀번호 체크
	public void adminPasswordCheck() {
		try {
			System.out.println("---------------------------------------------------");
			System.out.println("[관리자 MODE]");
			System.out.println("관리자 password ▷ ");
			int password = sc.nextInt();
			mvo.setPassword(password);
			System.out.println("---------------------------------------------------");
			System.out.println();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 관리자에서 보여줘야할 영화정보리스트
	public void adminMovieList(ArrayList<MovieVO> datas) {
		if (datas.size() == 0) {
			return;
		} else {
			for (MovieVO v : datas) {
				System.out.println("[" + v.getmNum() + "] " + v.getmName() + " / " + v.getmGenre() + " / "
						+ v.getmRuntime() + " / " + v.getmCast() + " / " + v.getmInfo());
			}
		}
	}

	// 관리자모드 메뉴 출력
	public void adminView() {
		try {
			System.out.println();
			System.out.println("	---------------------------------------------------");
			System.out.printf("	     관리자모드에 입장하셨습니다. 원하시는 버튼을 선택해주세요:-)\n");
			System.out.println("	---------------------------------------------------");
			System.out.println();
			System.out.printf("%20s %15s %15s\n", "①영화추가", "②영화변경&삭제 ", "③관리자모드종료");
			System.out.println("GO ▷ ");
			button = sc.nextInt();
			System.out.println();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 관리자모드 1 영화추가
	public void adminView1() {
		try {
			System.out.println();
			System.out.println("\t■■■■■■■■■■■■■■■■■■■[영화추가]■■■■■■■■■■■■■■■■■■■");
			System.out.println();
			System.out.println("영화제목  ▷");
			String mName = sc.next();
			mvo.setmName(mName);
			System.out.println("장르  ▷ ");
			String mGenre = sc.next();
			mvo.setmGenre(mGenre);
			System.out.println("상영시간(분) ▷ ");
			String mRuntime = sc.next();
			mvo.setmRuntime(mRuntime);
			System.out.println("영화감독 ▷ ");
			String mCast = sc.next();
			mvo.setmCast(mCast);
			sc.nextLine();
			System.out.println("줄거리  ▷ ");
			String mInfo = sc.nextLine();
			mvo.setmInfo(mInfo);
			System.out.println("★☆★☆[영화추가Complete]☆★☆★");
			System.out.println();
		}catch(Exception e) {
			e.printStackTrace();
		}

	}

	// 관리자모드 2 영화변경삭제
	public void adminView2() {
		try {
			System.out.println();
			System.out.println("\t■■■■■■■■■■■■■■■■■■[영화변경&삭제]■■■■■■■■■■■■■■■■■■");
			System.out.println();
			System.out.printf("%20s %15s %15s\n", "①변경", "②삭제 ", "③종료");
			System.out.println("GO ▷ ");
			button = sc.nextInt();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 관리자모드 2 영화변경삭제 - 변경
	public void adminView2by1() {
		try {
			System.out.println();
			System.out.println("\t■■■■■■■■■■■■■■■■■■■[영화변경]■■■■■■■■■■■■■■■■■■■");
			System.out.println();
			System.out.println("변경할 영화 번호 ▷ ");
			int mNum = sc.nextInt();
			mvo.setmNum(mNum);
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	public void adminView2by1by1() {
		try {
			System.out.println("영화제목 변경 ▷");
			String mName = sc.next();
			mvo.setmName(mName);
			System.out.println("장르 변경 ▷ ");
			String mGenre = sc.next();
			mvo.setmGenre(mGenre);
			System.out.println("변경할 상영시간(분) ▷ ");
			String mRuntime = sc.next();
			mvo.setmRuntime(mRuntime);
			System.out.println("영화감독변경 ▷ ");
			String mCast = sc.next();
			mvo.setmCast(mCast);
			sc.nextLine();
			System.out.println("줄거리 변경 ▷ ");
			String mInfo = sc.nextLine();
			mvo.setmInfo(mInfo);
			System.out.println("★☆★☆[영화변경 Complete]☆★☆★");
			System.out.println();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

	// 관리자모드 2 영화변경삭제 - 삭제
	public void adminView2by2() {
		try {
			System.out.println();
			System.out.println("\t■■■■■■■■■■■■■■■■■■■[영화삭제]■■■■■■■■■■■■■■■■■■■");
			System.out.println();
			System.out.println("삭제할 영화 번호 입력 ▷ ");
			int mNum = sc.nextInt();
			mvo.setmNum(mNum);
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	public void deleteSucceed() {
		System.out.println("★☆★☆[영화 삭제 Complete]☆★☆★");
		System.out.println();
	}

	// 관리자모드 2 영화변경및 삭제 종료
	public void adminView2by3() {
		System.out.println();
		System.out.println("[System]영화변경 및 삭제를 종료합니다.");
		System.out.println();
		// break;
	}

	// 관리자모드 3 관리자모드 종료
	public void programEnd() {
		System.out.println();
		System.out.println("[System]관리자모드를 종료합니다.\n 수고하셨습니다.");
		System.out.println();
	}

	// 프로그램 종료
	public void viewEnd() {
		System.out.println();
		System.out.println("[System] 프로그램을 종료합니다 (>'-'<)");
		// return;
	}

}